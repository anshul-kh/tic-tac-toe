{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport Square from \"./Square\";\nimport { useState } from \"react\";\nconst Board = () => {\n  _s();\n  const [seqVAL, setSeqVAL] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(false);\n  const checkWinner = () => {\n    const Winner = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let logic of checkWinner) {\n      const [a, b, c] = logic;\n      if (state[a] === state[b] && state[a] === state[c]) {\n        return state[a];\n      }\n      return null;\n    }\n  };\n  const handleClick = i => {\n    const copyState = [...seqVAL];\n    copyState[i] = isXNext ? \"X\" : \"0\";\n    setSeqVAL(copyState);\n    setIsXNext(!isXNext);\n  };\n  return {\n    checkWinner\n  };\n};\n_s(Board, \"3LMf10DXJ4/jMwP5pHxbPNrZBR0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Square","useState","Board","_s","seqVAL","setSeqVAL","Array","fill","isXNext","setIsXNext","checkWinner","Winner","logic","a","b","c","state","handleClick","i","copyState","_c","$RefreshReg$"],"sources":["/home/yuichi/10_Min_React_Projects/TIC_TAC_TOE/src/Components/Board.jsx"],"sourcesContent":["import React from \"react\";\nimport Square from \"./Square\";\nimport { useState } from \"react\";\n\nconst Board = () => {\n\n   const [seqVAL , setSeqVAL] = useState(Array(9).fill(null))\n   \n   const [isXNext , setIsXNext] = useState(false);\n\n   const checkWinner= () =>{\n      const Winner = [\n         [0,1,2],\n         [3,4,5],\n         [6,7,8],\n         [0,3,6],\n         [1,4,7],\n         [2,5,8],\n         [0,4,8],\n         [2,4,6]\n      ];\n\n      for (let logic of checkWinner ){\n         const [a,b,c] = logic;\n         if (state[a]===state[b] && state[a]===state[c]){\n            return state[a];\n         }\n\n         return null;\n      }\n\n\n   \n   }\n\n   const handleClick = (i) => {\n       const copyState = [...seqVAL];\n       copyState[i] = isXNext ? \"X\" : \"0\";\n       setSeqVAL(copyState);\n       setIsXNext(!isXNext);\n       \n   }\n\n   return (\n     {\n      checkWinner \n     }\n   );\n}\n\nexport default Board;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,MAAM,EAAGC,SAAS,CAAC,GAAGJ,QAAQ,CAACK,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAE1D,MAAM,CAACC,OAAO,EAAGC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE9C,MAAMS,WAAW,GAAEA,CAAA,KAAK;IACrB,MAAMC,MAAM,GAAG,CACZ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CACT;IAED,KAAK,IAAIC,KAAK,IAAIF,WAAW,EAAE;MAC5B,MAAM,CAACG,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC,GAAGH,KAAK;MACrB,IAAII,KAAK,CAACH,CAAC,CAAC,KAAGG,KAAK,CAACF,CAAC,CAAC,IAAIE,KAAK,CAACH,CAAC,CAAC,KAAGG,KAAK,CAACD,CAAC,CAAC,EAAC;QAC5C,OAAOC,KAAK,CAACH,CAAC,CAAC;MAClB;MAEA,OAAO,IAAI;IACd;EAIH,CAAC;EAED,MAAMI,WAAW,GAAIC,CAAC,IAAK;IACvB,MAAMC,SAAS,GAAG,CAAC,GAAGf,MAAM,CAAC;IAC7Be,SAAS,CAACD,CAAC,CAAC,GAAGV,OAAO,GAAG,GAAG,GAAG,GAAG;IAClCH,SAAS,CAACc,SAAS,CAAC;IACpBV,UAAU,CAAC,CAACD,OAAO,CAAC;EAExB,CAAC;EAED,OACE;IACCE;EACD,CAAC;AAEN,CAAC;AAAAP,EAAA,CA5CKD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}